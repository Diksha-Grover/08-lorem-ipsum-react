{"ast":null,"code":"var _jsxFileName = \"D:\\\\github_repos\\\\react\\\\15-react-projects\\\\08-lorem-ipsum\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport nova from './data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState([]);\n\n  const handleSubmit = e => {\n    e.preventDefault(); // let count = parseInt(count);\n    // parseInt method parses a value as a string and returns the integer\n\n    if (count <= 0) {\n      setCount(1);\n    }\n\n    if (count > 8) {\n      setCount(8);\n    }\n\n    setText(nova.slice(0, count));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"section-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"tired of boring lorem ipsum?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"lorem-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"count\",\n        children: \"paragraphs:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"count\",\n        id: \"count\",\n        value: count,\n        onChange: e => setCount(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"lorem-text\",\n      children: text.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uaqNQJro0SNi64HXpTFoq2QUakw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/github_repos/react/15-react-projects/08-lorem-ipsum/src/App.js"],"names":["React","useState","nova","App","count","setCount","text","setText","handleSubmit","e","preventDefault","slice","target","value","map","item","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMO,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;AACA;;AACA,QAAIN,KAAK,IAAI,CAAb,EAAgB;AACdC,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;AACD,QAAID,KAAK,GAAG,CAAZ,EAAe;AACbC,MAAAA,QAAQ,CAAC,CAAD,CAAR;AACD;;AACDE,IAAAA,OAAO,CAACL,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcP,KAAd,CAAD,CAAP;AACD,GAXD;;AAYA,sBACE;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAA6B,MAAA,QAAQ,EAAEI,YAAvC;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,EAAE,EAAC,OAHL;AAIE,QAAA,KAAK,EAAEJ,KAJT;AAKE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACG,MAAF,CAASC,KAAV;AAL3B;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAaE;AAAS,MAAA,SAAS,EAAC,YAAnB;AAAA,gBACGP,IAAI,CAACQ,GAAL,CAAS,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,4BAAO;AAAA,oBAAgBD;AAAhB,WAAQC,KAAR;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFA;AADH;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GArCQb,G;;KAAAA,G;AAuCT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport nova from './data';\r\n\r\nfunction App() {\r\n  const [count, setCount] = useState(0);\r\n  const [text, setText] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // let count = parseInt(count);\r\n    // parseInt method parses a value as a string and returns the integer\r\n    if (count <= 0) {\r\n      setCount(1);\r\n    }\r\n    if (count > 8) {\r\n      setCount(8);\r\n    }\r\n    setText(nova.slice(0, count));\r\n  };\r\n  return (\r\n    <section className='section-center'>\r\n      <h3>tired of boring lorem ipsum?</h3>\r\n      <form className='lorem-form' onSubmit={handleSubmit}>\r\n        <label htmlFor='count'>paragraphs:</label>\r\n        <input\r\n          type='number'\r\n          name='count'\r\n          id='count'\r\n          value={count}\r\n          onChange={(e) => setCount(e.target.value)}\r\n        />\r\n        <button className='btn'>generate</button>\r\n      </form>\r\n      <article className='lorem-text'>\r\n        {text.map((item, index) => {\r\n          return <p key={index}>{item}</p>;\r\n        })}\r\n      </article>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}